package SwingUI;


import DAO.ÜrünlerDAO;
import AbstractDal.JDBCBaglanti;
import DAO.Veritabanı;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;



public class ÜrünGüncelleme extends javax.swing.JFrame {
    ÜrünlerDAO islemler =  new ÜrünlerDAO();
    Veritabanı veritabanı = new Veritabanı();
    Connection con;
    ResultSet rs;
    PreparedStatement prs;
    Statement st;
    String dbUrl = "jdbc:mysql://localhost:3306/stoktakipotomasyonu";
     JDBCBaglanti jDBCBaglanti = new JDBCBaglanti() {

        @Override
        public String connectionStatus() throws SQLException {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    };
    public ÜrünGüncelleme() throws SQLException{
        initComponents();
        databaseBaglanti();
        güncelleTablo();
        this.setLocationRelativeTo(null);

    }
    
    public void databaseBaglanti() {
        try {
            con =  DriverManager.getConnection(dbUrl, "root", "");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Veritabanı Bağlantısı Başarısız Oldu...");
        }
    }
    
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        güncelleTablo = new javax.swing.JTable();
        sıralaText = new javax.swing.JTextField();
        sıralaComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        güncelleButon = new javax.swing.JButton();
        güncelleÜrünAdı = new javax.swing.JTextField();
        güncelleÜrünKategori = new javax.swing.JTextField();
        güncelleÜrünStok = new javax.swing.JTextField();
        güncelleAlışFiyatı = new javax.swing.JTextField();
        güncelleSatışFiyatı = new javax.swing.JTextField();
        güncelleId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ürün Güncelle");

        güncelleTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        güncelleTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                güncelleTabloMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(güncelleTablo);

        sıralaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sıralaTextActionPerformed(evt);
            }
        });
        sıralaText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sıralaTextKeyPressed(evt);
            }
        });

        sıralaComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ürün Kategorisine Göre", "Ürün İsmine Göre", "Stok Miktarına Göre Düşükten Yükseğe", "Stok Miktarına Göre Yüksekten Düşüğe" }));
        sıralaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sıralaComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Ara");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(sıralaText, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(175, 175, 175)
                        .addComponent(sıralaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                        .addGap(24, 24, 24))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sıralaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sıralaText)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jLabel1.setText("ID");

        jLabel2.setText("Ürün Adı");

        jLabel3.setText("Ürün Kategori");

        jLabel4.setText("Ürün Stok");

        jLabel5.setText("Alış Fiyatı");

        jLabel6.setText("Satış Fiyatı");

        güncelleButon.setText("Güncelle");
        güncelleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                güncelleButonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(güncelleId, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(güncelleÜrünAdı)
                                .addComponent(güncelleÜrünKategori)
                                .addComponent(güncelleÜrünStok)
                                .addComponent(güncelleAlışFiyatı)
                                .addComponent(güncelleSatışFiyatı, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(güncelleButon))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(güncelleId, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(güncelleÜrünAdı, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(güncelleÜrünKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(güncelleÜrünStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(güncelleAlışFiyatı, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(güncelleSatışFiyatı, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addComponent(güncelleButon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sıralaTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sıralaTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sıralaTextActionPerformed

    private void güncelleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_güncelleButonActionPerformed
       
      
        
        try {
            int id = Integer.valueOf(güncelleId.getText());
            String ürünAdı = güncelleÜrünAdı.getText();
            String ürünKategori = güncelleÜrünKategori.getText();
            String ürünStok = güncelleÜrünStok.getText();
            String alışFiyatı = güncelleAlışFiyatı.getText();
            String satisFiyati = güncelleSatışFiyatı.getText();
            
            islemler.ürünGüncelle(id,ürünAdı, ürünKategori, ürünStok,alışFiyatı, satisFiyati);
                
           
            JOptionPane.showMessageDialog(null, "Ürün Başarılı Bir Şekilde Güncellendi", "Ürün Güncellendi", HEIGHT);

            güncelleId.setText("");
            güncelleÜrünAdı.setText("");
            güncelleÜrünKategori.setText("");
            güncelleÜrünStok.setText("");
            güncelleAlışFiyatı.setText("");
            güncelleSatışFiyatı.setText("");
            güncelleTablo();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ürün Güncellenemedi Bilgileri Kontrol Ediniz veya Listeden Yeniden Seçiniz", "Ürün Güncellenemedi", HEIGHT);
        }
                           
    }//GEN-LAST:event_güncelleButonActionPerformed

       public void güncelleTablo() {
        try {
            String sql = "select id as Id ,ürün_adi as Ürün_Adi,ürün_kategorisi as Ürün_Kategorisi,ürün_stok as Ürün_Adet,"
                    + "ürün_af as Ürün_Alış_Fiyatı,ürün_sf as Ürün_Satış_Fiyatı from ürünler order by ürün_kategorisi asc";
            prs = con.prepareStatement(sql);
            rs = prs.executeQuery();
            güncelleTablo.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "aa");
            //ex.printStackTrace();
        }
    }
    private void güncelleTabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_güncelleTabloMouseClicked
        try {
            int row = güncelleTablo.getSelectedRow();
            String tableClick = (güncelleTablo.getModel().getValueAt(row, 0).toString());
            String sqlString = "select * from ürünler where id='" + tableClick + "'  ";
            prs = con.prepareStatement(sqlString);
            rs = prs.executeQuery();
            if (rs.next()) {
                String add1 = rs.getString("id");
                güncelleId.setText(add1);
                String add2 = rs.getString("ürün_adi");
                güncelleÜrünAdı.setText(add2);
                String add3 = rs.getString("ürün_kategorisi");
                güncelleÜrünKategori.setText(add3);
                String add4 = rs.getString("ürün_stok");
                güncelleÜrünStok.setText(add4);
                String add5 = rs.getString("ürün_af");
                güncelleAlışFiyatı.setText(add5);
                String add6 = rs.getString("ürün_sf");
                güncelleSatışFiyatı.setText(add6);
                
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "");
        }
    }//GEN-LAST:event_güncelleTabloMouseClicked

    private void sıralaTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sıralaTextKeyPressed
         TableRowSorter<TableModel> sorter = new TableRowSorter<>((DefaultTableModel) güncelleTablo.getModel());
        sorter.setRowFilter(RowFilter.regexFilter(this.sıralaText.getText()));
        güncelleTablo.setRowSorter(sorter);
        güncelleTablo();
    }//GEN-LAST:event_sıralaTextKeyPressed

    private void sıralaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sıralaComboBoxActionPerformed
        String c = String.valueOf(sıralaComboBox.getSelectedItem());
        if (c == "Ürün Grubuna Göre") {
            try {
                String sql = "select * from ürünler order by ürün_kategorisi asc";
                prs = con.prepareStatement(sql);
                rs = prs.executeQuery();
                güncelleTablo.setModel(DbUtils.resultSetToTableModel(rs));
                güncelleTablo.getColumnModel().getColumn(0).setMaxWidth(40);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } else if (c == "Ürün İsmine Göre") {
            try {
                String sql = "select * from ürünler order by ürün_adi asc";
                prs = con.prepareStatement(sql);
                rs = prs.executeQuery();
                güncelleTablo.setModel(DbUtils.resultSetToTableModel(rs));
                güncelleTablo.getColumnModel().getColumn(0).setMaxWidth(40);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } else if (c == "Stok Miktarına Göre Düşükten Yükseğe") {
            try {
                String sql = "select * from ürünler order by ürün_stok asc";
                prs = con.prepareStatement(sql);
                rs = prs.executeQuery();
                güncelleTablo.setModel(DbUtils.resultSetToTableModel(rs));
                güncelleTablo.getColumnModel().getColumn(0).setMaxWidth(40);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } else if (c == "Stok Miktarına Göre Yüksekten Düşüğe") {
            try {
                String sql = "select * from ürünler order by ürün_stok desc";
                prs = con.prepareStatement(sql);
                rs = prs.executeQuery();
                güncelleTablo.setModel(DbUtils.resultSetToTableModel(rs));
                güncelleTablo.getColumnModel().getColumn(0).setMaxWidth(40);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
    
        }
    }//GEN-LAST:event_sıralaComboBoxActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ÜrünGüncelleme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ÜrünGüncelleme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ÜrünGüncelleme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ÜrünGüncelleme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ÜrünGüncelleme().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ÜrünGüncelleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField güncelleAlışFiyatı;
    private javax.swing.JButton güncelleButon;
    private javax.swing.JLabel güncelleId;
    private javax.swing.JTextField güncelleSatışFiyatı;
    private javax.swing.JTable güncelleTablo;
    private javax.swing.JTextField güncelleÜrünAdı;
    private javax.swing.JTextField güncelleÜrünKategori;
    private javax.swing.JTextField güncelleÜrünStok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox sıralaComboBox;
    private javax.swing.JTextField sıralaText;
    // End of variables declaration//GEN-END:variables
}
